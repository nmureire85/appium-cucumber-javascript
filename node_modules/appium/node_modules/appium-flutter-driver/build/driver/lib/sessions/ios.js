"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
// @ts-ignore
const appium_xcuitest_driver_1 = __importDefault(require("appium-xcuitest-driver"));
const logger_1 = require("../logger");
const observatory_1 = require("./observatory");
const setupNewIOSDriver = async (caps) => {
    const iosArgs = {
        javascriptEnabled: true,
    };
    const iosdriver = new appium_xcuitest_driver_1.default(iosArgs);
    const capsCopy = Object.assign({}, caps, { newCommandTimeout: 0 });
    await iosdriver.createSession(capsCopy);
    return iosdriver;
};
exports.startIOSSession = async (caps) => {
    logger_1.log.info(`Starting an IOS proxy session`);
    const iosdriver = await setupNewIOSDriver(caps);
    const observatoryWsUri = exports.getObservatoryWsUri(iosdriver);
    return Promise.all([
        iosdriver,
        observatory_1.connectSocket(observatoryWsUri),
    ]);
};
exports.getObservatoryWsUri = (proxydriver) => {
    const urlObject = observatory_1.processLogToGetobservatory(proxydriver.logs.syslog.logs);
    return urlObject.toJSON();
};
//# sourceMappingURL=ios.js.map