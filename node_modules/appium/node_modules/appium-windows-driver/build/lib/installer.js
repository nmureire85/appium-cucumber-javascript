"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.downloadWAD = downloadWAD;
exports.setupWAD = setupWAD;
exports.isWADInstalled = isWADInstalled;
exports.isWADChecksumOk = isWADChecksumOk;
exports.installWAD = installWAD;
exports.default = exports.isAdmin = exports.WAD_GUID = exports.WAD_INSTALL_PATH = void 0;

require("source-map-support/register");

var _lodash = _interopRequireDefault(require("lodash"));

var _appiumSupport = require("appium-support");

var _path = _interopRequireDefault(require("path"));

var _teen_process = require("teen_process");

var _logger = _interopRequireDefault(require("./logger"));

var _os = _interopRequireDefault(require("os"));

const WAD_VER = '1.2-RC';
const WAD_DL = `https://github.com/Microsoft/WinAppDriver/releases/download/v${WAD_VER}/WindowsApplicationDriver.msi`;
const WAD_DL_MD5 = 'dbaa9a3f7416c2b73cc5cd0e7452c8d0';
const WAD_TIMEOUT = 5000;

const WAD_INSTALL_PATH = _path.default.resolve(process.env['ProgramFiles(x86)'] || process.env.ProgramFiles || 'C:\\\\Program Files', 'Windows Application Driver', 'WinAppDriver.exe');

exports.WAD_INSTALL_PATH = WAD_INSTALL_PATH;
const WAD_EXE_MD5 = '50d694ebfaa622ef7e4061c1bf52efe6';
const WAD_GUID = 'DDCD58BF-37CF-4758-A15E-A60E7CF20E41';
exports.WAD_GUID = WAD_GUID;

async function downloadWAD() {
  const tempFile = _path.default.resolve(_os.default.tmpdir(), `${_appiumSupport.util.uuidV4()}.msi`);

  _logger.default.info(`Downloading ${WAD_DL} to '${tempFile}'`);

  await _appiumSupport.net.downloadFile(WAD_DL, tempFile, {
    timeout: WAD_TIMEOUT
  });
  const downloadedMd5 = await _appiumSupport.fs.md5(tempFile);

  if (downloadedMd5 !== WAD_DL_MD5) {
    throw new Error(`Checksum validation error: expected ${WAD_DL_MD5} but got ${downloadedMd5}`);
  }

  return tempFile;
}

async function installWAD(msiPath) {
  _logger.default.info(`Running MSI installer...`);

  await (0, _teen_process.exec)('msiexec', ['/i', msiPath, '/qn']);
}

async function isWADInstalled() {
  return await _appiumSupport.fs.exists(WAD_INSTALL_PATH);
}

async function isWADChecksumOk() {
  return (await _appiumSupport.fs.md5(WAD_INSTALL_PATH)) === WAD_EXE_MD5;
}

const isAdmin = _lodash.default.memoize(async function isAdmin() {
  try {
    await (0, _teen_process.exec)('fsutil.exe', ['dirty', 'query', process.env.SystemDrive || 'C:']);
    return true;
  } catch (ign) {
    return false;
  }
});

exports.isAdmin = isAdmin;

async function setupWAD() {
  if (!_appiumSupport.system.isWindows()) {
    throw new Error(`Can only download WinAppDriver on Windows!`);
  }

  if (await isWADInstalled()) {
    if (await isWADChecksumOk()) {
      _logger.default.info(`WinAppDriver version ${WAD_VER} already exists with correct checksum, not re-downloading`);
    } else {
      _logger.default.warn('WinAppDriver exists, but the checksum did not match. Not re-downloading. ' + 'Was it replaced manually?');
    }

    return;
  }

  _logger.default.info(`WinAppDriver doesn't exist, setting up`);

  if (!(await isAdmin())) {
    throw new Error(`You are not running as an administrator so WinAppDriver cannot be installed for you; please reinstall as admin`);
  }

  const msiPath = await downloadWAD();

  try {
    await installWAD(msiPath);
  } finally {
    await _appiumSupport.fs.rimraf(msiPath);
  }
}

var _default = setupWAD;
exports.default = _default;require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9pbnN0YWxsZXIuanMiXSwibmFtZXMiOlsiV0FEX1ZFUiIsIldBRF9ETCIsIldBRF9ETF9NRDUiLCJXQURfVElNRU9VVCIsIldBRF9JTlNUQUxMX1BBVEgiLCJwYXRoIiwicmVzb2x2ZSIsInByb2Nlc3MiLCJlbnYiLCJQcm9ncmFtRmlsZXMiLCJXQURfRVhFX01ENSIsIldBRF9HVUlEIiwiZG93bmxvYWRXQUQiLCJ0ZW1wRmlsZSIsIm9zIiwidG1wZGlyIiwidXRpbCIsInV1aWRWNCIsImxvZyIsImluZm8iLCJuZXQiLCJkb3dubG9hZEZpbGUiLCJ0aW1lb3V0IiwiZG93bmxvYWRlZE1kNSIsImZzIiwibWQ1IiwiRXJyb3IiLCJpbnN0YWxsV0FEIiwibXNpUGF0aCIsImlzV0FESW5zdGFsbGVkIiwiZXhpc3RzIiwiaXNXQURDaGVja3N1bU9rIiwiaXNBZG1pbiIsIl8iLCJtZW1vaXplIiwiU3lzdGVtRHJpdmUiLCJpZ24iLCJzZXR1cFdBRCIsInN5c3RlbSIsImlzV2luZG93cyIsIndhcm4iLCJyaW1yYWYiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFHQSxNQUFNQSxPQUFPLEdBQUcsUUFBaEI7QUFDQSxNQUFNQyxNQUFNLEdBQUksZ0VBQStERCxPQUFRLCtCQUF2RjtBQUNBLE1BQU1FLFVBQVUsR0FBRyxrQ0FBbkI7QUFDQSxNQUFNQyxXQUFXLEdBQUcsSUFBcEI7O0FBRUEsTUFBTUMsZ0JBQWdCLEdBQUdDLGNBQUtDLE9BQUwsQ0FDdkJDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLG1CQUFaLEtBQW9DRCxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsWUFBaEQsSUFBZ0UscUJBRHpDLEVBRXZCLDRCQUZ1QixFQUVPLGtCQUZQLENBQXpCOzs7QUFHQSxNQUFNQyxXQUFXLEdBQUcsa0NBQXBCO0FBQ0EsTUFBTUMsUUFBUSxHQUFHLHNDQUFqQjs7O0FBRUEsZUFBZUMsV0FBZixHQUE4QjtBQUM1QixRQUFNQyxRQUFRLEdBQUdSLGNBQUtDLE9BQUwsQ0FBYVEsWUFBR0MsTUFBSCxFQUFiLEVBQTJCLEdBQUVDLG9CQUFLQyxNQUFMLEVBQWMsTUFBM0MsQ0FBakI7O0FBR0FDLGtCQUFJQyxJQUFKLENBQVUsZUFBY2xCLE1BQU8sUUFBT1ksUUFBUyxHQUEvQzs7QUFDQSxRQUFNTyxtQkFBSUMsWUFBSixDQUFpQnBCLE1BQWpCLEVBQXlCWSxRQUF6QixFQUFtQztBQUFDUyxJQUFBQSxPQUFPLEVBQUVuQjtBQUFWLEdBQW5DLENBQU47QUFHQSxRQUFNb0IsYUFBYSxHQUFHLE1BQU1DLGtCQUFHQyxHQUFILENBQU9aLFFBQVAsQ0FBNUI7O0FBQ0EsTUFBSVUsYUFBYSxLQUFLckIsVUFBdEIsRUFBa0M7QUFDaEMsVUFBTSxJQUFJd0IsS0FBSixDQUFXLHVDQUFzQ3hCLFVBQVcsWUFBV3FCLGFBQWMsRUFBckYsQ0FBTjtBQUNEOztBQUVELFNBQU9WLFFBQVA7QUFDRDs7QUFFRCxlQUFlYyxVQUFmLENBQTJCQyxPQUEzQixFQUFvQztBQUNsQ1Ysa0JBQUlDLElBQUosQ0FBVSwwQkFBVjs7QUFDQSxRQUFNLHdCQUFLLFNBQUwsRUFBZ0IsQ0FBQyxJQUFELEVBQU9TLE9BQVAsRUFBZ0IsS0FBaEIsQ0FBaEIsQ0FBTjtBQUNEOztBQUVELGVBQWVDLGNBQWYsR0FBaUM7QUFDL0IsU0FBTyxNQUFNTCxrQkFBR00sTUFBSCxDQUFVMUIsZ0JBQVYsQ0FBYjtBQUNEOztBQUVELGVBQWUyQixlQUFmLEdBQWtDO0FBQ2hDLFNBQU8sT0FBTVAsa0JBQUdDLEdBQUgsQ0FBT3JCLGdCQUFQLENBQU4sTUFBbUNNLFdBQTFDO0FBQ0Q7O0FBRUQsTUFBTXNCLE9BQU8sR0FBR0MsZ0JBQUVDLE9BQUYsQ0FBVSxlQUFlRixPQUFmLEdBQTBCO0FBQ2xELE1BQUk7QUFDRixVQUFNLHdCQUFLLFlBQUwsRUFBbUIsQ0FBQyxPQUFELEVBQVUsT0FBVixFQUFtQnpCLE9BQU8sQ0FBQ0MsR0FBUixDQUFZMkIsV0FBWixJQUEyQixJQUE5QyxDQUFuQixDQUFOO0FBQ0EsV0FBTyxJQUFQO0FBQ0QsR0FIRCxDQUdFLE9BQU9DLEdBQVAsRUFBWTtBQUNaLFdBQU8sS0FBUDtBQUNEO0FBQ0YsQ0FQZSxDQUFoQjs7OztBQVNBLGVBQWVDLFFBQWYsR0FBMkI7QUFDekIsTUFBSSxDQUFDQyxzQkFBT0MsU0FBUCxFQUFMLEVBQXlCO0FBQ3ZCLFVBQU0sSUFBSWIsS0FBSixDQUFXLDRDQUFYLENBQU47QUFDRDs7QUFFRCxNQUFJLE1BQU1HLGNBQWMsRUFBeEIsRUFBNEI7QUFDMUIsUUFBSSxNQUFNRSxlQUFlLEVBQXpCLEVBQTZCO0FBQzNCYixzQkFBSUMsSUFBSixDQUFVLHdCQUF1Qm5CLE9BQVEsMkRBQXpDO0FBQ0QsS0FGRCxNQUVPO0FBQ0xrQixzQkFBSXNCLElBQUosQ0FBUyw4RUFDUCwyQkFERjtBQUVEOztBQUNEO0FBQ0Q7O0FBRUR0QixrQkFBSUMsSUFBSixDQUFVLHdDQUFWOztBQUVBLE1BQUksRUFBQyxNQUFNYSxPQUFPLEVBQWQsQ0FBSixFQUFzQjtBQUNwQixVQUFNLElBQUlOLEtBQUosQ0FBVyxnSEFBWCxDQUFOO0FBQ0Q7O0FBRUQsUUFBTUUsT0FBTyxHQUFHLE1BQU1oQixXQUFXLEVBQWpDOztBQUNBLE1BQUk7QUFDRixVQUFNZSxVQUFVLENBQUNDLE9BQUQsQ0FBaEI7QUFDRCxHQUZELFNBRVU7QUFDUixVQUFNSixrQkFBR2lCLE1BQUgsQ0FBVWIsT0FBVixDQUFOO0FBQ0Q7QUFDRjs7ZUFNY1MsUSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5pbXBvcnQgeyBzeXN0ZW0sIGZzLCB1dGlsLCBuZXQgfSBmcm9tICdhcHBpdW0tc3VwcG9ydCc7XG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcbmltcG9ydCB7IGV4ZWMgfSBmcm9tICd0ZWVuX3Byb2Nlc3MnO1xuaW1wb3J0IGxvZyBmcm9tICcuL2xvZ2dlcic7XG5pbXBvcnQgb3MgZnJvbSAnb3MnO1xuXG5cbmNvbnN0IFdBRF9WRVIgPSAnMS4yLVJDJztcbmNvbnN0IFdBRF9ETCA9IGBodHRwczovL2dpdGh1Yi5jb20vTWljcm9zb2Z0L1dpbkFwcERyaXZlci9yZWxlYXNlcy9kb3dubG9hZC92JHtXQURfVkVSfS9XaW5kb3dzQXBwbGljYXRpb25Ecml2ZXIubXNpYDtcbmNvbnN0IFdBRF9ETF9NRDUgPSAnZGJhYTlhM2Y3NDE2YzJiNzNjYzVjZDBlNzQ1MmM4ZDAnO1xuY29uc3QgV0FEX1RJTUVPVVQgPSA1MDAwOyAvL21zXG5cbmNvbnN0IFdBRF9JTlNUQUxMX1BBVEggPSBwYXRoLnJlc29sdmUoXG4gIHByb2Nlc3MuZW52WydQcm9ncmFtRmlsZXMoeDg2KSddIHx8IHByb2Nlc3MuZW52LlByb2dyYW1GaWxlcyB8fCAnQzpcXFxcXFxcXFByb2dyYW0gRmlsZXMnLFxuICAnV2luZG93cyBBcHBsaWNhdGlvbiBEcml2ZXInLCAnV2luQXBwRHJpdmVyLmV4ZScpO1xuY29uc3QgV0FEX0VYRV9NRDUgPSAnNTBkNjk0ZWJmYWE2MjJlZjdlNDA2MWMxYmY1MmVmZTYnO1xuY29uc3QgV0FEX0dVSUQgPSAnRERDRDU4QkYtMzdDRi00NzU4LUExNUUtQTYwRTdDRjIwRTQxJztcblxuYXN5bmMgZnVuY3Rpb24gZG93bmxvYWRXQUQgKCkge1xuICBjb25zdCB0ZW1wRmlsZSA9IHBhdGgucmVzb2x2ZShvcy50bXBkaXIoKSwgYCR7dXRpbC51dWlkVjQoKX0ubXNpYCk7XG5cbiAgLy8gYWN0dWFsbHkgZG93bmxvYWQgdGhlIG1zaSBmaWxlXG4gIGxvZy5pbmZvKGBEb3dubG9hZGluZyAke1dBRF9ETH0gdG8gJyR7dGVtcEZpbGV9J2ApO1xuICBhd2FpdCBuZXQuZG93bmxvYWRGaWxlKFdBRF9ETCwgdGVtcEZpbGUsIHt0aW1lb3V0OiBXQURfVElNRU9VVH0pO1xuXG4gIC8vIHZhbGlkYXRlIGNoZWNrc3VtXG4gIGNvbnN0IGRvd25sb2FkZWRNZDUgPSBhd2FpdCBmcy5tZDUodGVtcEZpbGUpO1xuICBpZiAoZG93bmxvYWRlZE1kNSAhPT0gV0FEX0RMX01ENSkge1xuICAgIHRocm93IG5ldyBFcnJvcihgQ2hlY2tzdW0gdmFsaWRhdGlvbiBlcnJvcjogZXhwZWN0ZWQgJHtXQURfRExfTUQ1fSBidXQgZ290ICR7ZG93bmxvYWRlZE1kNX1gKTtcbiAgfVxuXG4gIHJldHVybiB0ZW1wRmlsZTtcbn1cblxuYXN5bmMgZnVuY3Rpb24gaW5zdGFsbFdBRCAobXNpUGF0aCkge1xuICBsb2cuaW5mbyhgUnVubmluZyBNU0kgaW5zdGFsbGVyLi4uYCk7XG4gIGF3YWl0IGV4ZWMoJ21zaWV4ZWMnLCBbJy9pJywgbXNpUGF0aCwgJy9xbiddKTtcbn1cblxuYXN5bmMgZnVuY3Rpb24gaXNXQURJbnN0YWxsZWQgKCkge1xuICByZXR1cm4gYXdhaXQgZnMuZXhpc3RzKFdBRF9JTlNUQUxMX1BBVEgpO1xufVxuXG5hc3luYyBmdW5jdGlvbiBpc1dBRENoZWNrc3VtT2sgKCkge1xuICByZXR1cm4gYXdhaXQgZnMubWQ1KFdBRF9JTlNUQUxMX1BBVEgpID09PSBXQURfRVhFX01ENTtcbn1cblxuY29uc3QgaXNBZG1pbiA9IF8ubWVtb2l6ZShhc3luYyBmdW5jdGlvbiBpc0FkbWluICgpIHtcbiAgdHJ5IHtcbiAgICBhd2FpdCBleGVjKCdmc3V0aWwuZXhlJywgWydkaXJ0eScsICdxdWVyeScsIHByb2Nlc3MuZW52LlN5c3RlbURyaXZlIHx8ICdDOiddKTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSBjYXRjaCAoaWduKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59KTtcblxuYXN5bmMgZnVuY3Rpb24gc2V0dXBXQUQgKCkge1xuICBpZiAoIXN5c3RlbS5pc1dpbmRvd3MoKSkge1xuICAgIHRocm93IG5ldyBFcnJvcihgQ2FuIG9ubHkgZG93bmxvYWQgV2luQXBwRHJpdmVyIG9uIFdpbmRvd3MhYCk7XG4gIH1cblxuICBpZiAoYXdhaXQgaXNXQURJbnN0YWxsZWQoKSkge1xuICAgIGlmIChhd2FpdCBpc1dBRENoZWNrc3VtT2soKSkge1xuICAgICAgbG9nLmluZm8oYFdpbkFwcERyaXZlciB2ZXJzaW9uICR7V0FEX1ZFUn0gYWxyZWFkeSBleGlzdHMgd2l0aCBjb3JyZWN0IGNoZWNrc3VtLCBub3QgcmUtZG93bmxvYWRpbmdgKTtcbiAgICB9IGVsc2Uge1xuICAgICAgbG9nLndhcm4oJ1dpbkFwcERyaXZlciBleGlzdHMsIGJ1dCB0aGUgY2hlY2tzdW0gZGlkIG5vdCBtYXRjaC4gTm90IHJlLWRvd25sb2FkaW5nLiAnICtcbiAgICAgICAgJ1dhcyBpdCByZXBsYWNlZCBtYW51YWxseT8nKTtcbiAgICB9XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgbG9nLmluZm8oYFdpbkFwcERyaXZlciBkb2Vzbid0IGV4aXN0LCBzZXR0aW5nIHVwYCk7XG5cbiAgaWYgKCFhd2FpdCBpc0FkbWluKCkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYFlvdSBhcmUgbm90IHJ1bm5pbmcgYXMgYW4gYWRtaW5pc3RyYXRvciBzbyBXaW5BcHBEcml2ZXIgY2Fubm90IGJlIGluc3RhbGxlZCBmb3IgeW91OyBwbGVhc2UgcmVpbnN0YWxsIGFzIGFkbWluYCk7XG4gIH1cblxuICBjb25zdCBtc2lQYXRoID0gYXdhaXQgZG93bmxvYWRXQUQoKTtcbiAgdHJ5IHtcbiAgICBhd2FpdCBpbnN0YWxsV0FEKG1zaVBhdGgpO1xuICB9IGZpbmFsbHkge1xuICAgIGF3YWl0IGZzLnJpbXJhZihtc2lQYXRoKTtcbiAgfVxufVxuXG5leHBvcnQge1xuICBkb3dubG9hZFdBRCwgc2V0dXBXQUQsIGlzV0FESW5zdGFsbGVkLCBpc1dBRENoZWNrc3VtT2ssIGluc3RhbGxXQUQsXG4gIFdBRF9JTlNUQUxMX1BBVEgsIFdBRF9HVUlELCBpc0FkbWluLFxufTtcbmV4cG9ydCBkZWZhdWx0IHNldHVwV0FEO1xuIl0sImZpbGUiOiJsaWIvaW5zdGFsbGVyLmpzIiwic291cmNlUm9vdCI6Ii4uLy4uIn0=
