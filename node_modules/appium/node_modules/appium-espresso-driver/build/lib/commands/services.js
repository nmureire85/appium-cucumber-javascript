"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.commands = void 0;

require("source-map-support/register");

var _lodash = _interopRequireDefault(require("lodash"));

const commands = {};
exports.commands = commands;

function requireOptions(opts, requiredKeys = []) {
  const missingKeys = _lodash.default.difference(requiredKeys, _lodash.default.keys(opts));

  if (!_lodash.default.isEmpty(missingKeys)) {
    throw new Error(`The following options are required: ${missingKeys}`);
  }

  return opts;
}

commands.mobileStartService = async function mobileStartService(opts = {}) {
  return await this.espresso.jwproxy.command('/appium/execute_mobile/start_service', 'POST', requireOptions(opts, ['intent']));
};

commands.mobileStopService = async function mobileStopService(opts = {}) {
  return await this.espresso.jwproxy.command('/appium/execute_mobile/stop_service', 'POST', requireOptions(opts, ['intent']));
};

var _default = commands;
exports.default = _default;require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9jb21tYW5kcy9zZXJ2aWNlcy5qcyJdLCJuYW1lcyI6WyJjb21tYW5kcyIsInJlcXVpcmVPcHRpb25zIiwib3B0cyIsInJlcXVpcmVkS2V5cyIsIm1pc3NpbmdLZXlzIiwiXyIsImRpZmZlcmVuY2UiLCJrZXlzIiwiaXNFbXB0eSIsIkVycm9yIiwibW9iaWxlU3RhcnRTZXJ2aWNlIiwiZXNwcmVzc28iLCJqd3Byb3h5IiwiY29tbWFuZCIsIm1vYmlsZVN0b3BTZXJ2aWNlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBOztBQUVBLE1BQU1BLFFBQVEsR0FBRyxFQUFqQjs7O0FBRUEsU0FBU0MsY0FBVCxDQUF5QkMsSUFBekIsRUFBK0JDLFlBQVksR0FBRyxFQUE5QyxFQUFrRDtBQUNoRCxRQUFNQyxXQUFXLEdBQUdDLGdCQUFFQyxVQUFGLENBQWFILFlBQWIsRUFBMkJFLGdCQUFFRSxJQUFGLENBQU9MLElBQVAsQ0FBM0IsQ0FBcEI7O0FBQ0EsTUFBSSxDQUFDRyxnQkFBRUcsT0FBRixDQUFVSixXQUFWLENBQUwsRUFBNkI7QUFDM0IsVUFBTSxJQUFJSyxLQUFKLENBQVcsdUNBQXNDTCxXQUFZLEVBQTdELENBQU47QUFDRDs7QUFDRCxTQUFPRixJQUFQO0FBQ0Q7O0FBbUJERixRQUFRLENBQUNVLGtCQUFULEdBQThCLGVBQWVBLGtCQUFmLENBQW1DUixJQUFJLEdBQUcsRUFBMUMsRUFBOEM7QUFDMUUsU0FBTyxNQUFNLEtBQUtTLFFBQUwsQ0FBY0MsT0FBZCxDQUFzQkMsT0FBdEIsQ0FBOEIsc0NBQTlCLEVBQXNFLE1BQXRFLEVBQ1haLGNBQWMsQ0FBQ0MsSUFBRCxFQUFPLENBQUMsUUFBRCxDQUFQLENBREgsQ0FBYjtBQUVELENBSEQ7O0FBb0JBRixRQUFRLENBQUNjLGlCQUFULEdBQTZCLGVBQWVBLGlCQUFmLENBQWtDWixJQUFJLEdBQUcsRUFBekMsRUFBNkM7QUFDeEUsU0FBTyxNQUFNLEtBQUtTLFFBQUwsQ0FBY0MsT0FBZCxDQUFzQkMsT0FBdEIsQ0FBOEIscUNBQTlCLEVBQXFFLE1BQXJFLEVBQ1haLGNBQWMsQ0FBQ0MsSUFBRCxFQUFPLENBQUMsUUFBRCxDQUFQLENBREgsQ0FBYjtBQUVELENBSEQ7O2VBT2VGLFEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuXG5jb25zdCBjb21tYW5kcyA9IHt9O1xuXG5mdW5jdGlvbiByZXF1aXJlT3B0aW9ucyAob3B0cywgcmVxdWlyZWRLZXlzID0gW10pIHtcbiAgY29uc3QgbWlzc2luZ0tleXMgPSBfLmRpZmZlcmVuY2UocmVxdWlyZWRLZXlzLCBfLmtleXMob3B0cykpO1xuICBpZiAoIV8uaXNFbXB0eShtaXNzaW5nS2V5cykpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYFRoZSBmb2xsb3dpbmcgb3B0aW9ucyBhcmUgcmVxdWlyZWQ6ICR7bWlzc2luZ0tleXN9YCk7XG4gIH1cbiAgcmV0dXJuIG9wdHM7XG59XG5cbi8qKlxuICogQHR5cGVkZWYge09iamVjdH0gU3RhcnRTZXJ2aWNlT3B0aW9uc1xuICogQHByb3BlcnR5IHshc3RyaW5nfSBpbnRlbnQgLSBUaGUgbmFtZSBvZiB0aGUgc2VydmljZSBpbnRlbnQgdG8gc3RhcnQsIGZvciBleGFtcGxlXG4gKiBgY29tLnNvbWUucGFja2FnZS5uYW1lLy5Zb3VyU2VydmljZVN1YkNsYXNzTmFtZWAuIFRoaXMgb3B0aW9uIGlzIG1hbmRhdG9yeS5cbiAqICEhISBPbmx5IHNlcnZpY2VzIGluIHRoZSBhcHAncyB1bmRlciB0ZXN0IHNjb3BlIGNvdWxkIGJlIHN0YXJ0ZWQuXG4gKiBAcHJvcGVydHkge2Jvb2xlYW59IGZvcmVncm91bmQgW2ZhbHNlXSAtIFNldCBpdCB0byBgdHJ1ZWAgaWYgeW91ciBzZXJ2aWNlIG11c3QgYmVcbiAqIHN0YXJ0ZWQgYXMgZm9yZWdyb3VuZCBzZXJ2aWNlLlxuICovXG5cbi8qKlxuICogU3RhcnRzIHRoZSBnaXZlbiBzZXJ2aWNlIGludGVudC5cbiAqXG4gKiBAcGFyYW0ge1N0YXJ0U2VydmljZU9wdGlvbnN9IG9wdHNcbiAqIEByZXR1cm5zIHtzdHJpbmd9IFRoZSBmdWxsIGNvbXBvbmVudCBuYW1lXG4gKiBAdGhyb3dzIHtFcnJvcn0gSWYgdGhlcmUgd2FzIGEgZmFpbHVyZSB3aGlsZSBzdGFydGluZyB0aGUgc2VydmljZVxuICogb3IgcmVxdWlyZWQgb3B0aW9ucyBhcmUgbWlzc2luZ1xuICovXG5jb21tYW5kcy5tb2JpbGVTdGFydFNlcnZpY2UgPSBhc3luYyBmdW5jdGlvbiBtb2JpbGVTdGFydFNlcnZpY2UgKG9wdHMgPSB7fSkge1xuICByZXR1cm4gYXdhaXQgdGhpcy5lc3ByZXNzby5qd3Byb3h5LmNvbW1hbmQoJy9hcHBpdW0vZXhlY3V0ZV9tb2JpbGUvc3RhcnRfc2VydmljZScsICdQT1NUJyxcbiAgICByZXF1aXJlT3B0aW9ucyhvcHRzLCBbJ2ludGVudCddKSk7XG59O1xuXG4vKipcbiAqIEB0eXBlZGVmIHtPYmplY3R9IFN0b3BTZXJ2aWNlT3B0aW9uc1xuICogQHByb3BlcnR5IHshc3RyaW5nfSBpbnRlbnQgLSBUaGUgbmFtZSBvZiB0aGUgc2VydmljZSBpbnRlbnQgdG8gc3RvcCwgZm9yIGV4YW1wbGVcbiAqIGBjb20uc29tZS5wYWNrYWdlLm5hbWUvLllvdXJTZXJ2aWNlU3ViQ2xhc3NOYW1lYC4gVGhpcyBvcHRpb24gaXMgbWFuZGF0b3J5LlxuICogISEhIE9ubHkgc2VydmljZXMgaW4gdGhlIGFwcCdzIHVuZGVyIHRlc3Qgc2NvcGUgY291bGQgYmUgc3RvcHBlZC5cbiAqL1xuXG4vKipcbiAqIFN0b3BzIHRoZSBnaXZlbiBzZXJ2aWNlIGludGVudC5cbiAqXG4gKiBAcGFyYW0ge1N0b3BTZXJ2aWNlT3B0aW9uc30gb3B0c1xuICogQHJldHVybnMge3N0cmluZ30gYHRydWVgIGlmIHRoZSBzZXJ2aWNlIGhhcyBiZWVuIHN1Y2Nlc3NmdWxseSBzdG9wcGVkXG4gKiBAdGhyb3dzIHtFcnJvcn0gSWYgdGhlcmUgd2FzIGEgZmFpbHVyZSB3aGlsZSBzdG9wcGluZyB0aGUgc2VydmljZVxuICogb3IgcmVxdWlyZWQgb3B0aW9ucyBhcmUgbWlzc2luZ1xuICovXG5jb21tYW5kcy5tb2JpbGVTdG9wU2VydmljZSA9IGFzeW5jIGZ1bmN0aW9uIG1vYmlsZVN0b3BTZXJ2aWNlIChvcHRzID0ge30pIHtcbiAgcmV0dXJuIGF3YWl0IHRoaXMuZXNwcmVzc28uandwcm94eS5jb21tYW5kKCcvYXBwaXVtL2V4ZWN1dGVfbW9iaWxlL3N0b3Bfc2VydmljZScsICdQT1NUJyxcbiAgICByZXF1aXJlT3B0aW9ucyhvcHRzLCBbJ2ludGVudCddKSk7XG59O1xuXG5cbmV4cG9ydCB7IGNvbW1hbmRzIH07XG5leHBvcnQgZGVmYXVsdCBjb21tYW5kcztcbiJdLCJmaWxlIjoibGliL2NvbW1hbmRzL3NlcnZpY2VzLmpzIiwic291cmNlUm9vdCI6Ii4uLy4uLy4uIn0=
