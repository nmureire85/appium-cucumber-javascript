"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.setLocationWithLyft = setLocationWithLyft;
exports.setLocationWithIdb = setLocationWithIdb;
exports.setLocationWithAppleScript = setLocationWithAppleScript;

require("source-map-support/register");

var _lodash = _interopRequireDefault(require("lodash"));

var _logger = _interopRequireDefault(require("./logger"));

var _teen_process = require("teen_process");

var _appiumSupport = require("appium-support");

const LYFT_SET_LOCATION = 'set-simulator-location';

async function setLocationWithLyft(udid, latitude, longitude) {
  try {
    await _appiumSupport.fs.which(LYFT_SET_LOCATION);
  } catch (e) {
    throw new Error(`'${LYFT_SET_LOCATION}' binary has not been found in your PATH. ` + 'Please install it as "brew install lyft/formulae/set-simulator-location" by brew or ' + 'read https://github.com/lyft/set-simulator-location to set the binary by manual to ' + 'be able to set geolocation by the library.');
  }

  try {
    await (0, _teen_process.exec)(LYFT_SET_LOCATION, ['-c', latitude, longitude, '-u', udid]);
  } catch (e) {
    throw new Error(`Failed to set geolocation with '${LYFT_SET_LOCATION}'. ` + `Original error: ${e.stderr || e.message}`);
  }
}

async function setLocationWithIdb(idb, latitude, longitude) {
  if (idb) {
    try {
      await idb.setLocation(latitude, longitude);
    } catch (e) {
      throw new Error(`Failed to set geolocation with idb. Original error: ${e.stderr || e.message}`);
    }
  }

  throw new Error('Failed to set geolocation with idb because it is not installed');
}

async function setLocationWithAppleScript(sim, latitude, longitude, menu = 'Debug') {
  const output = await sim.executeUIClientScript(`
    tell application "System Events"
      tell process "Simulator"
        set featureName to "Custom Location"
        set dstMenuItem to menu item (featureName & "â€¦") of menu 1 of menu item "Location" of menu 1 of menu bar item "${menu}" of menu bar 1
        click dstMenuItem
        delay 1
        set value of text field 1 of window featureName to ${latitude} as string
        delay 0.5
        set value of text field 2 of window featureName to ${longitude} as string
        delay 0.5
        click button "OK" of window featureName
        delay 0.5
        set isInvisible to (not (exists (window featureName)))
      end tell
    end tell
  `);

  _logger.default.debug(`Geolocation parameters dialog accepted: ${output}`);

  if (_lodash.default.trim(output) !== 'true') {
    throw new Error(`Failed to set geolocation with AppleScript. Original error: ${output}`);
  }
}require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9nZW9sb2NhdGlvbi5qcyJdLCJuYW1lcyI6WyJMWUZUX1NFVF9MT0NBVElPTiIsInNldExvY2F0aW9uV2l0aEx5ZnQiLCJ1ZGlkIiwibGF0aXR1ZGUiLCJsb25naXR1ZGUiLCJmcyIsIndoaWNoIiwiZSIsIkVycm9yIiwic3RkZXJyIiwibWVzc2FnZSIsInNldExvY2F0aW9uV2l0aElkYiIsImlkYiIsInNldExvY2F0aW9uIiwic2V0TG9jYXRpb25XaXRoQXBwbGVTY3JpcHQiLCJzaW0iLCJtZW51Iiwib3V0cHV0IiwiZXhlY3V0ZVVJQ2xpZW50U2NyaXB0IiwibG9nIiwiZGVidWciLCJfIiwidHJpbSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUVBLE1BQU1BLGlCQUFpQixHQUFHLHdCQUExQjs7QUFZQSxlQUFlQyxtQkFBZixDQUFvQ0MsSUFBcEMsRUFBMENDLFFBQTFDLEVBQW9EQyxTQUFwRCxFQUErRDtBQUM3RCxNQUFJO0FBQ0YsVUFBTUMsa0JBQUdDLEtBQUgsQ0FBU04saUJBQVQsQ0FBTjtBQUNELEdBRkQsQ0FFRSxPQUFPTyxDQUFQLEVBQVU7QUFDVixVQUFNLElBQUlDLEtBQUosQ0FBVyxJQUFHUixpQkFBa0IsNENBQXRCLEdBQ2Qsc0ZBRGMsR0FFZCxxRkFGYyxHQUdkLDRDQUhJLENBQU47QUFJRDs7QUFFRCxNQUFJO0FBQ0YsVUFBTSx3QkFBS0EsaUJBQUwsRUFBd0IsQ0FDNUIsSUFENEIsRUFDdEJHLFFBRHNCLEVBQ1pDLFNBRFksRUFFNUIsSUFGNEIsRUFFdEJGLElBRnNCLENBQXhCLENBQU47QUFJRCxHQUxELENBS0UsT0FBT0ssQ0FBUCxFQUFVO0FBQ1YsVUFBTSxJQUFJQyxLQUFKLENBQVcsbUNBQWtDUixpQkFBa0IsS0FBckQsR0FDYixtQkFBa0JPLENBQUMsQ0FBQ0UsTUFBRixJQUFZRixDQUFDLENBQUNHLE9BQVEsRUFEckMsQ0FBTjtBQUVEO0FBQ0Y7O0FBWUQsZUFBZUMsa0JBQWYsQ0FBbUNDLEdBQW5DLEVBQXdDVCxRQUF4QyxFQUFrREMsU0FBbEQsRUFBNkQ7QUFDM0QsTUFBSVEsR0FBSixFQUFTO0FBQ1AsUUFBSTtBQUNGLFlBQU1BLEdBQUcsQ0FBQ0MsV0FBSixDQUFnQlYsUUFBaEIsRUFBMEJDLFNBQTFCLENBQU47QUFDRCxLQUZELENBRUUsT0FBT0csQ0FBUCxFQUFVO0FBQ1YsWUFBTSxJQUFJQyxLQUFKLENBQVcsdURBQXNERCxDQUFDLENBQUNFLE1BQUYsSUFBWUYsQ0FBQyxDQUFDRyxPQUFRLEVBQXZGLENBQU47QUFDRDtBQUNGOztBQUNELFFBQU0sSUFBSUYsS0FBSixDQUFVLGdFQUFWLENBQU47QUFDRDs7QUFjRCxlQUFlTSwwQkFBZixDQUEyQ0MsR0FBM0MsRUFBZ0RaLFFBQWhELEVBQTBEQyxTQUExRCxFQUFxRVksSUFBSSxHQUFHLE9BQTVFLEVBQXFGO0FBQ25GLFFBQU1DLE1BQU0sR0FBRyxNQUFNRixHQUFHLENBQUNHLHFCQUFKLENBQTJCOzs7O3lIQUl1RUYsSUFBSzs7OzZEQUdqRWIsUUFBUzs7NkRBRVRDLFNBQVU7Ozs7Ozs7R0FUaEQsQ0FBckI7O0FBaUJBZSxrQkFBSUMsS0FBSixDQUFXLDJDQUEwQ0gsTUFBTyxFQUE1RDs7QUFDQSxNQUFJSSxnQkFBRUMsSUFBRixDQUFPTCxNQUFQLE1BQW1CLE1BQXZCLEVBQStCO0FBQzdCLFVBQU0sSUFBSVQsS0FBSixDQUFXLCtEQUE4RFMsTUFBTyxFQUFoRixDQUFOO0FBQ0Q7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5pbXBvcnQgbG9nIGZyb20gJy4vbG9nZ2VyJztcbmltcG9ydCB7IGV4ZWMgfSBmcm9tICd0ZWVuX3Byb2Nlc3MnO1xuaW1wb3J0IHsgZnMgfSBmcm9tICdhcHBpdW0tc3VwcG9ydCc7XG5cbmNvbnN0IExZRlRfU0VUX0xPQ0FUSU9OID0gJ3NldC1zaW11bGF0b3ItbG9jYXRpb24nO1xuXG4vKipcbiAqIFNldCBjdXN0b20gZ2VvbG9jYXRpb24gcGFyYW1ldGVycyBmb3IgdGhlIGdpdmVuIFNpbXVsYXRvciB1c2luZyBMWUZUX1NFVF9MT0NBVElPTi5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gdWRpZCAtIFRoZSB1ZGlkIHRvIHNldCB0aGUgZ2l2ZW4gZ2VvbG9jYXRpb25cbiAqIEBwYXJhbSB7c3RyaW5nfG51bWJlcn0gbGF0aXR1ZGUgLSBUaGUgbGF0aXR1ZGUgdmFsdWUsIHdoaWNoIGlzIGdvaW5nIHRvIGJlIGVudGVyZWRcbiAqICAgaW50byB0aGUgY29ycmVzcG9uZGluZyBlZGl0IGZpZWxkLCBmb3IgZXhhbXBsZSAnMzksMDAwNicuXG4gKiBAcGFyYW0ge3N0cmluZ3xudW1iZXJ9IGxvbmdpdHVkZSAtIFRoZSBsb25naXR1ZGUgdmFsdWUsIHdoaWNoIGlzIGdvaW5nIHRvIGJlIGVudGVyZWRcbiAqICAgaW50byB0aGUgY29ycmVzcG9uZGluZyBlZGl0IGZpZWxkLCBmb3IgZXhhbXBsZSAnMTksMDA2OCcuXG4gKiBAdGhyb3dzIHtFcnJvcn0gSWYgaXQgZmFpbGVkIHRvIHNldCB0aGUgbG9jYXRpb25cbiAqL1xuYXN5bmMgZnVuY3Rpb24gc2V0TG9jYXRpb25XaXRoTHlmdCAodWRpZCwgbGF0aXR1ZGUsIGxvbmdpdHVkZSkge1xuICB0cnkge1xuICAgIGF3YWl0IGZzLndoaWNoKExZRlRfU0VUX0xPQ0FUSU9OKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHRocm93IG5ldyBFcnJvcihgJyR7TFlGVF9TRVRfTE9DQVRJT059JyBiaW5hcnkgaGFzIG5vdCBiZWVuIGZvdW5kIGluIHlvdXIgUEFUSC4gYCArXG4gICAgICAnUGxlYXNlIGluc3RhbGwgaXQgYXMgXCJicmV3IGluc3RhbGwgbHlmdC9mb3JtdWxhZS9zZXQtc2ltdWxhdG9yLWxvY2F0aW9uXCIgYnkgYnJldyBvciAnICtcbiAgICAgICdyZWFkIGh0dHBzOi8vZ2l0aHViLmNvbS9seWZ0L3NldC1zaW11bGF0b3ItbG9jYXRpb24gdG8gc2V0IHRoZSBiaW5hcnkgYnkgbWFudWFsIHRvICcgK1xuICAgICAgJ2JlIGFibGUgdG8gc2V0IGdlb2xvY2F0aW9uIGJ5IHRoZSBsaWJyYXJ5LicpO1xuICB9XG5cbiAgdHJ5IHtcbiAgICBhd2FpdCBleGVjKExZRlRfU0VUX0xPQ0FUSU9OLCBbXG4gICAgICAnLWMnLCBsYXRpdHVkZSwgbG9uZ2l0dWRlLFxuICAgICAgJy11JywgdWRpZFxuICAgIF0pO1xuICB9IGNhdGNoIChlKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGBGYWlsZWQgdG8gc2V0IGdlb2xvY2F0aW9uIHdpdGggJyR7TFlGVF9TRVRfTE9DQVRJT059Jy4gYCArXG4gICAgICBgT3JpZ2luYWwgZXJyb3I6ICR7ZS5zdGRlcnIgfHwgZS5tZXNzYWdlfWApO1xuICB9XG59XG5cbi8qKlxuICogU2V0IGN1c3RvbSBnZW9sb2NhdGlvbiBwYXJhbWV0ZXJzIGZvciB0aGUgZ2l2ZW4gU2ltdWxhdG9yIHVzaW5nIGlkYi5cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gaWRiIC0gVGhlIElEQiBpbnN0YW5jZVxuICogQHBhcmFtIHtzdHJpbmd8bnVtYmVyfSBsYXRpdHVkZSAtIFRoZSBsYXRpdHVkZSB2YWx1ZSwgd2hpY2ggaXMgZ29pbmcgdG8gYmUgZW50ZXJlZFxuICogICBpbnRvIHRoZSBjb3JyZXNwb25kaW5nIGVkaXQgZmllbGQsIGZvciBleGFtcGxlICczOSwwMDA2Jy5cbiAqIEBwYXJhbSB7c3RyaW5nfG51bWJlcn0gbG9uZ2l0dWRlIC0gVGhlIGxvbmdpdHVkZSB2YWx1ZSwgd2hpY2ggaXMgZ29pbmcgdG8gYmUgZW50ZXJlZFxuICogICBpbnRvIHRoZSBjb3JyZXNwb25kaW5nIGVkaXQgZmllbGQsIGZvciBleGFtcGxlICcxOSwwMDY4Jy5cbiAqIEB0aHJvd3Mge0Vycm9yfSBJZiBpdCBmYWlsZWQgdG8gc2V0IHRoZSBsb2NhdGlvblxuICovXG5hc3luYyBmdW5jdGlvbiBzZXRMb2NhdGlvbldpdGhJZGIgKGlkYiwgbGF0aXR1ZGUsIGxvbmdpdHVkZSkge1xuICBpZiAoaWRiKSB7XG4gICAgdHJ5IHtcbiAgICAgIGF3YWl0IGlkYi5zZXRMb2NhdGlvbihsYXRpdHVkZSwgbG9uZ2l0dWRlKTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYEZhaWxlZCB0byBzZXQgZ2VvbG9jYXRpb24gd2l0aCBpZGIuIE9yaWdpbmFsIGVycm9yOiAke2Uuc3RkZXJyIHx8IGUubWVzc2FnZX1gKTtcbiAgICB9XG4gIH1cbiAgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gc2V0IGdlb2xvY2F0aW9uIHdpdGggaWRiIGJlY2F1c2UgaXQgaXMgbm90IGluc3RhbGxlZCcpO1xufVxuXG5cbi8qKlxuICogU2V0IGN1c3RvbSBnZW9sb2NhdGlvbiBwYXJhbWV0ZXJzIGZvciB0aGUgZ2l2ZW4gU2ltdWxhdG9yIHVzaW5nIEFwcGxlU2NyaXB0XG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHNpbSAtIFRoZSBTaW11bGF0b3JYY29kZSBvYmplY3RcbiAqIEBwYXJhbSB7c3RyaW5nfG51bWJlcn0gbGF0aXR1ZGUgLSBUaGUgbGF0aXR1ZGUgdmFsdWUsIHdoaWNoIGlzIGdvaW5nIHRvIGJlIGVudGVyZWRcbiAqICAgaW50byB0aGUgY29ycmVzcG9uZGluZyBlZGl0IGZpZWxkLCBmb3IgZXhhbXBsZSAnMzksMDAwNicuXG4gKiBAcGFyYW0ge3N0cmluZ3xudW1iZXJ9IGxvbmdpdHVkZSAtIFRoZSBsb25naXR1ZGUgdmFsdWUsIHdoaWNoIGlzIGdvaW5nIHRvIGJlIGVudGVyZWRcbiAqICAgaW50byB0aGUgY29ycmVzcG9uZGluZyBlZGl0IGZpZWxkLCBmb3IgZXhhbXBsZSAnMTksMDA2OCcuXG4gKiBAcGFyYW0ge3N0cmluZ30gW21lbnU9RGVidWddIC0gVGhlIG1lbnUgZmllbGQgaW4gd2hpY2ggdGhlICdMb2NhdGlvbicgZmVhdHVyZSBpcyBmb3VuZFxuICogQHRocm93cyB7RXJyb3J9IElmIGl0IGZhaWxlZCB0byBzZXQgdGhlIGxvY2F0aW9uXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIHNldExvY2F0aW9uV2l0aEFwcGxlU2NyaXB0IChzaW0sIGxhdGl0dWRlLCBsb25naXR1ZGUsIG1lbnUgPSAnRGVidWcnKSB7XG4gIGNvbnN0IG91dHB1dCA9IGF3YWl0IHNpbS5leGVjdXRlVUlDbGllbnRTY3JpcHQoYFxuICAgIHRlbGwgYXBwbGljYXRpb24gXCJTeXN0ZW0gRXZlbnRzXCJcbiAgICAgIHRlbGwgcHJvY2VzcyBcIlNpbXVsYXRvclwiXG4gICAgICAgIHNldCBmZWF0dXJlTmFtZSB0byBcIkN1c3RvbSBMb2NhdGlvblwiXG4gICAgICAgIHNldCBkc3RNZW51SXRlbSB0byBtZW51IGl0ZW0gKGZlYXR1cmVOYW1lICYgXCLigKZcIikgb2YgbWVudSAxIG9mIG1lbnUgaXRlbSBcIkxvY2F0aW9uXCIgb2YgbWVudSAxIG9mIG1lbnUgYmFyIGl0ZW0gXCIke21lbnV9XCIgb2YgbWVudSBiYXIgMVxuICAgICAgICBjbGljayBkc3RNZW51SXRlbVxuICAgICAgICBkZWxheSAxXG4gICAgICAgIHNldCB2YWx1ZSBvZiB0ZXh0IGZpZWxkIDEgb2Ygd2luZG93IGZlYXR1cmVOYW1lIHRvICR7bGF0aXR1ZGV9IGFzIHN0cmluZ1xuICAgICAgICBkZWxheSAwLjVcbiAgICAgICAgc2V0IHZhbHVlIG9mIHRleHQgZmllbGQgMiBvZiB3aW5kb3cgZmVhdHVyZU5hbWUgdG8gJHtsb25naXR1ZGV9IGFzIHN0cmluZ1xuICAgICAgICBkZWxheSAwLjVcbiAgICAgICAgY2xpY2sgYnV0dG9uIFwiT0tcIiBvZiB3aW5kb3cgZmVhdHVyZU5hbWVcbiAgICAgICAgZGVsYXkgMC41XG4gICAgICAgIHNldCBpc0ludmlzaWJsZSB0byAobm90IChleGlzdHMgKHdpbmRvdyBmZWF0dXJlTmFtZSkpKVxuICAgICAgZW5kIHRlbGxcbiAgICBlbmQgdGVsbFxuICBgKTtcbiAgbG9nLmRlYnVnKGBHZW9sb2NhdGlvbiBwYXJhbWV0ZXJzIGRpYWxvZyBhY2NlcHRlZDogJHtvdXRwdXR9YCk7XG4gIGlmIChfLnRyaW0ob3V0cHV0KSAhPT0gJ3RydWUnKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGBGYWlsZWQgdG8gc2V0IGdlb2xvY2F0aW9uIHdpdGggQXBwbGVTY3JpcHQuIE9yaWdpbmFsIGVycm9yOiAke291dHB1dH1gKTtcbiAgfVxufVxuXG5leHBvcnQge1xuICBzZXRMb2NhdGlvbldpdGhMeWZ0LCBzZXRMb2NhdGlvbldpdGhJZGIsIHNldExvY2F0aW9uV2l0aEFwcGxlU2NyaXB0XG59O1xuIl0sImZpbGUiOiJsaWIvZ2VvbG9jYXRpb24uanMiLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==
