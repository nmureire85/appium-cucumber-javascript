{"version":3,"file":"get_color_fns.js","sourceRoot":"","sources":["../../src/formatter/get_color_fns.ts"],"names":[],"mappings":";;;;;AAAA,kDAAyB;AAezB,SAAwB,WAAW,CAAC,OAAgB;IAClD,IAAI,OAAO,EAAE;QACX,OAAO;YACL,SAAS,CAAC,MAA4B;gBACpC,OAAO;oBACL,SAAS,EAAE,eAAK,CAAC,GAAG,CAAC,IAAI,CAAC,eAAK,CAAC;oBAChC,MAAM,EAAE,eAAK,CAAC,GAAG,CAAC,IAAI,CAAC,eAAK,CAAC;oBAC7B,MAAM,EAAE,eAAK,CAAC,KAAK,CAAC,IAAI,CAAC,eAAK,CAAC;oBAC/B,OAAO,EAAE,eAAK,CAAC,MAAM,CAAC,IAAI,CAAC,eAAK,CAAC;oBACjC,OAAO,EAAE,eAAK,CAAC,IAAI,CAAC,IAAI,CAAC,eAAK,CAAC;oBAC/B,SAAS,EAAE,eAAK,CAAC,MAAM,CAAC,IAAI,CAAC,eAAK,CAAC;oBACnC,OAAO,EAAE,eAAK,CAAC,MAAM,CAAC,IAAI,CAAC,eAAK,CAAC;iBAClC,CAAC,MAAM,CAAC,CAAA;YACX,CAAC;YACD,QAAQ,EAAE,eAAK,CAAC,IAAI,CAAC,IAAI,CAAC,eAAK,CAAC;YAChC,GAAG,EAAE,eAAK,CAAC,IAAI,CAAC,IAAI,CAAC,eAAK,CAAC;YAC3B,SAAS,EAAE,eAAK,CAAC,KAAK,CAAC,IAAI,CAAC,eAAK,CAAC;YAClC,WAAW,EAAE,eAAK,CAAC,GAAG,CAAC,IAAI,CAAC,eAAK,CAAC;YAClC,YAAY,EAAE,eAAK,CAAC,GAAG,CAAC,IAAI,CAAC,eAAK,CAAC;YACnC,UAAU,EAAE,eAAK,CAAC,IAAI,CAAC,IAAI,CAAC,eAAK,CAAC;SACnC,CAAA;KACF;SAAM;QACL,OAAO;YACL,SAAS,CAAC,OAA6B;gBACrC,OAAO,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAA;YACjB,CAAC;YACD,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YAClB,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YACb,SAAS,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YACnB,WAAW,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YACrB,YAAY,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YACtB,UAAU,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;SACrB,CAAA;KACF;AACH,CAAC;AAlCD,8BAkCC","sourcesContent":["import chalk from 'chalk'\nimport { TestStepResultStatus } from '@cucumber/messages'\n\nexport type IColorFn = (text: string) => string\n\nexport interface IColorFns {\n  forStatus: (status: TestStepResultStatus) => IColorFn\n  location: IColorFn\n  tag: IColorFn\n  diffAdded: IColorFn\n  diffRemoved: IColorFn\n  errorMessage: IColorFn\n  errorStack: IColorFn\n}\n\nexport default function getColorFns(enabled: boolean): IColorFns {\n  if (enabled) {\n    return {\n      forStatus(status: TestStepResultStatus) {\n        return {\n          AMBIGUOUS: chalk.red.bind(chalk),\n          FAILED: chalk.red.bind(chalk),\n          PASSED: chalk.green.bind(chalk),\n          PENDING: chalk.yellow.bind(chalk),\n          SKIPPED: chalk.cyan.bind(chalk),\n          UNDEFINED: chalk.yellow.bind(chalk),\n          UNKNOWN: chalk.yellow.bind(chalk),\n        }[status]\n      },\n      location: chalk.gray.bind(chalk),\n      tag: chalk.cyan.bind(chalk),\n      diffAdded: chalk.green.bind(chalk),\n      diffRemoved: chalk.red.bind(chalk),\n      errorMessage: chalk.red.bind(chalk),\n      errorStack: chalk.grey.bind(chalk),\n    }\n  } else {\n    return {\n      forStatus(_status: TestStepResultStatus) {\n        return (x) => x\n      },\n      location: (x) => x,\n      tag: (x) => x,\n      diffAdded: (x) => x,\n      diffRemoved: (x) => x,\n      errorMessage: (x) => x,\n      errorStack: (x) => x,\n    }\n  }\n}\n"]}